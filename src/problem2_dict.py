# -*- coding: utf-8 -*-
"""
Created on Thu Feb 28 18:51:32 2019

@author: Vidya

Solution to Project Euler problem 2
https://projecteuler.net/problem=2

Problem Statement :

>>>>>>>>>>> 
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed 
four million, find the sum of the even-valued terms.
>>>>>>>>>>>

Assumptions : 

1. The max value entered is an integer

Result : 
Expected Answer for 4000000 - 4613732

############## Timing info

Added code to time summing of even fibonacci numbers using dictionary and
generator

Found that using a generator was faster 

problem2_dict.py
Sum of even fibonnaci numbers upto 10 is 10
--- 2.6695196628570557 seconds ---

problem2_dict.py
Sum of even fibonnaci numbers upto 4000000 is 4613732
--- 1.6634728908538818 seconds ---

>>>>

problem2_gen.py
Sum of even fibonnaci numbers upto 10 is 10
--- 2.9260706901550293 seconds ---

problem2_gen.py
Sum of even fibonnaci numbers upto 4000000 is 4613732
--- 1.3737201690673828 seconds ---


"""
import time
start_time = time.time()
fib_dictionary = {0: 0, 1: 1}


def fib(n):

    if n not in fib_dictionary:
        fib_dictionary[n] = fib(n-1) + fib(n-2)
    return fib_dictionary[n]


def sum_even_fibonnaci(max):

    sum_even = 0
    x = 0

    while True:
        fib_value = fib(x)
        if (fib_value <= max):
            if (fib_value % 2) == 0:
                sum_even += fib_value
            x += 1
        else:
            break

    print('Sum of even fibonnaci numbers upto {0} is {1}'.format(
        max, sum_even))


max = int(input(
    'Please enter max value upto which to sum even fibonacci numbers : ').strip())

sum_even_fibonnaci(max)
print("--- %s seconds ---" % (time.time() - start_time))
